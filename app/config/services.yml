# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{EventSubscriber,Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'

    twig.extension.intl:
        class: "Twig_Extensions_Extension_Intl"
        tags:
            - { name: twig.extension }

    sonata.page.kernel.exception_listener:
        class: "AppBundle\\EventSubscriber\\ExceptionListener"
        tags:
            - { name: 'kernel.event_listener', event: 'kernel.exception', method: 'onKernelException',  priority: -127 }
            - { name: 'monolog.logger',  channel: "request" }
        calls:
            - [ 'setDefaultLocale', [ '%kernel.default_locale%' ] ]
            - [ 'setTranslator', [ '@translator' ] ]
        arguments:
            - '@sonata.page.site.selector'
            - '@sonata.page.cms_manager_selector'
            - %kernel.debug%
            - '@sonata.templating'
            - '@sonata.page.page_service_manager'
            - '@sonata.page.decorator_strategy'
            -   404: _page_internal_error_not_found    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
                500: _page_internal_error_fatal
            - '@?logger'